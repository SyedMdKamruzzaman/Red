<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
    <div class="row">
        <div class="col-md-12">
            <div class="portlet box blue">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-user"></i>
						 <span class="caption-subject bold uppercase"><#= ViewDataTypeName.Split('.').Last() #> Management</span>
                    </div>
                    <div class="tools">
                        <a href="javascript:;" class="collapse"> </a>
                        <a href="javascript:;" class="fullscreen"> </a>
                    </div>
                    <div class="actions">
                        <div class="inputs pull-right">
                            <a href="/<#= ViewDataTypeName.Split('.').Last() #>/Create" class="btn btn-circle btn-default btn-group-lg" style="margin-right:10px; margin-left:10px;">
                                <i class="fa fa-plus-circle"></i> Create New </a> 							
                        </div>
                        
                    </div>
                </div>
 <div class="portlet-body">
             <table class="table table-striped table-bordered table-hover dt-responsive" id="sys-table" cellspacing="0">
             <thead>
				<tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th></th>
    </tr>
	 </thead>
@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
		 @using (Html.BeginForm("Delete", "<#= ViewDataTypeName.Split('.').Last() #>", FormMethod.Post, new { @id = "notificationForm" }))
           {
             <div class="input-group-btn">
			@Html.AntiForgeryToken()
           @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>","Edit", "Edit", "<#= ViewDataTypeName.Split('.').Last() #>", routeValues: new { id=item.<#= pkName #> }, htmlAttributes: new { @class = "btn btn-info btn-sm" })|
           @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-list-alt'></span>", "Details", "Details", "<#= ViewDataTypeName.Split('.').Last() #>", new { id=item.<#= pkName #> }, htmlAttributes: new { @class = "btn btn-success btn-sm" })|
		<a class="btn btn-danger btn-sm" href="javascript:confirmDelete('Delete','@item.<#= pkName #>')"><span class='glyphicon glyphicon-trash'></span></a>				
		</div>
		}
        </td>
		
<#
} else {
#>
        <td>
		 @using (Html.BeginForm("Delete", "<#= ViewDataTypeName.Split('.').Last() #>", FormMethod.Post, new { @id = "notificationForm" }))
           {
		   <div class="input-group-btn">
			@Html.AntiForgeryToken()
           @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>","Edit", "Edit", "<#= ViewDataTypeName.Split('.').Last() #>", routeValues: new { /* id=item.PrimaryKey */ }, htmlAttributes: new { @class = "btn btn-info btn-sm" })|
           @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-list-alt'></span>", "Details", "Details", "<#= ViewDataTypeName.Split('.').Last() #>",new { /* id=item.PrimaryKey */ }, htmlAttributes: new { @class = "btn btn-success btn-sm" })|
		<a class="btn btn-danger btn-sm" href="javascript:confirmDelete('Delete','@item./* PrimaryKey */')"><span class='glyphicon glyphicon-trash'></span></a>				
		</div>
		}
        </td>
<#
}
#>
			</tr>
}

			</table>
		</div>
            </div>
        </div>
    </div>

	@*<div id="modal-container" class="modal fade draggable-modal modalx" tabindex="-1" data-backdrop="static" data-keyboard="false" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
        </div>
    </div>
</div>*@
	 @section Scripts{
        <script src="/Content/plugins/datatables/datatables.js" type="text/javascript"></script>
        <script src="/Content/plugins/datatables/datatables.min.js" type="text/javascript"></script>
        <script src="/Content/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>

    }

    @section topLevel{
        @{Html.RenderPartial("_RenderConfirm.Modal"); }
    }
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>