@using BlackSys.Helpers
@model BlackSys.Models.ProductSales


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/jquerytoken")

<div class="row">
<div class="col-md-12">
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption font-green">
                <i class="icon-pin font-green"></i>
                <span class="caption-subject bold uppercase">Creating new ProductSales</span>
            </div>
            <div class="actions">               
                <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
            </div>
        </div>
        <div class="portlet-body form">
@using (Html.BeginForm("Create", "ProductSales", FormMethod.Post, new { @class = "form-horizontal", role = "form", @Id = "Create" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-body">
        @Html.ValidationSummary(true)
		<div class="form-group  margin-top-20">
            <div class="form-group">
                @Html.LabelFor(model => model.AccountsCategoryId, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.AccountsCategoryId, new SelectList(ViewBag.AccountsCategory, "ID", "category"), new { @class = "form-control" })
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.AccountsCategoryId)*@
                </div>
            </div>
	
            <div class="form-group">
                @Html.LabelFor(model => model.ItemId, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ItemId, new { @class = "form-control" })
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.ItemId)*@
                </div>
            </div>
	
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
                 <div class="form-control-focus"> </div>
				@*@Html.ValidationMessageFor(model => model.Quantity)*@
            </div>
        </div>
	
            <div class="form-group">
                @Html.LabelFor(model => model.UnitId, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.UnitId, new SelectList(ViewBag.Unit, "Id", "Name"), new { @class = "form-control" })
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.UnitId)*@
                </div>
            </div>
	
            <div class="form-group">
                @Html.LabelFor(model => model.UnitPrice, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.UnitPrice, new { @class = "form-control" })
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.UnitPrice)*@
                </div>
            </div>
	
            <div class="form-group">
                @Html.LabelFor(model => model.SubTotal, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.SubTotal, new { @class = "form-control" ,@readonly="readonly"})
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.SubTotal)*@
                </div>
            </div>
	
            <div class="form-group">
                @Html.LabelFor(model => model.SalesDate, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.SalesDate, "{0:dd-MMM-yyyy}", new { type = "date", @class = "form-control" })
                    <div class="form-control-focus"> </div>
                    @*@Html.ValidationMessageFor(model => model.SalesDate)*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BranchId, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.BranchId, new SelectList(ViewBag.Braches, "BranchId", "BranchName"), new { @class = "form-control" })
                    <div class="form-control-focus"> </div>
                </div>
            </div>
	
                <div class="form-actions">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-10">
						 @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" }) 
						<input type="submit" value="Create" class="btn btn-success" />
						</div>
				</div>
			</div>
    </div>
	</div>
}


            
    </div>
</div>
</div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerytoken")

    <script type="text/javascript">

        $(document).ready(function () {


            $("#ItemId").tokenInput("@Url.Action("GetProduct", "ProductSales")",
            {
                theme: 'facebook',
                tokenLimit: 1,
                preventDuplicates: true
            });

            $("#SalesDate").val(Get2Date());

        });


        $('#Quantity').blur(function () {
            var qty = document.getElementById('Quantity').value;
            var unitPrice = document.getElementById('UnitPrice').value;
          
            var subTotal = parseFloat(qty) * parseFloat(unitPrice);
            //ServicePayment_AdvancePayment
            document.getElementById('SubTotal').value = subTotal.toFixed(2);
        });

        $('#UnitPrice').blur(function () {
            var qty = document.getElementById('Quantity').value;
            var unitPrice = document.getElementById('UnitPrice').value;

            var subTotal = parseFloat(qty) * parseFloat(unitPrice);
            //ServicePayment_AdvancePayment
            document.getElementById('SubTotal').value = subTotal.toFixed(2);
        });

    </script>
}
