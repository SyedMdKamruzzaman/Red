@using BlackSys.Helpers
@model BlackSys.Models.ViewModels.RequisitionN1ViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-green">
                    <i class="icon-pin font-green"></i>
                    <span class="caption-subject bold uppercase">Approve Requisition New</span>
                </div>
                <div class="actions">
                    <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
                </div>
            </div>
            <div class="portlet-body form">
                @using (Html.BeginForm("Edit", "RequisitionN1", FormMethod.Post, new { @class = "form-horizontal", role = "form", @Id = "Edit RequisitionN1" }))
                {
                    <div class="form-body">
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary("", new { @class = "text-error" })


                        <div class="form-group  margin-top-20">

                            <div class="form-group">
                                @Html.LabelFor(model => model.RequisitionDate, new { @class = "col-md-2 control-label" })
                                <div class="col-md-4">
                                    @*@{ Html.EnableClientValidation(false); }*@
                                    @Html.TextBoxFor(model => model.RequisitionDate, new { @class = "form-control" } )

                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.product, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    
                                        @Html.TextBoxFor(model => model.product, new { @class = "form-control",@readonly="readonly" })
                                        @*<span class="input-group-btn" style="width:0;">
                                            <a href="/RequisitionItem/Create" class="btn btn-circle btn-default btn-group-lg" style="margin-right:10px; margin-left:10px;">
                                                <i class="fa fa-plus-circle"></i> Create Item
                                            </a>
                                        </span>*@
                                    
                                    @*@Html.EditorFor(model => model.Item)
                                        @Html.ValidationMessageFor(model => model.Item)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Specification, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.Specification, new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.Specification)*@
                                    <div class="form-control-focus"> </div>
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
                                    <div class="form-control-focus"> </div>
                                    @*@Html.ValidationMessageFor(model => model.Quantity*@
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BranchID, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownList("BranchID", new SelectList(ViewBag.Braches, "BranchId", "BranchName"), new { @class = "form-control", @readonly = "readonly" })
                                    @*@Html.EditorFor(model => model.BranchID, new { @class = "", disabled = "disabled" })*@
                                    @*@Html.ValidationMessageFor(model => model.BranchID)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remarks, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.Remarks)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RequisitionApprovalDate, new { @class = "col-md-2 control-label" })
                                <div class="col-md-4">
                                    @*@{ Html.EnableClientValidation(false); }*@
                                    @Html.EditorFor(model => model.RequisitionApprovalDate, new { htmlAttributes = new { @class = "form-control" } })

                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApprovalStatus, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownList("ApprovalStatus", new SelectList(Enum.GetValues(typeof(BlackSys.Models.ApprovalStatus))), new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.ApprovalStatus)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApprovalQuantity, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.ApprovalQuantity, new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.Remarks)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApprovalRemarks, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.ApprovalRemarks, new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.Remarks)*@
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
                                        <input type="submit" class="btn btn-primary" value="Approve" />
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                }
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
}
